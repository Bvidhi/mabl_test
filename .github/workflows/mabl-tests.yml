name: Run all Mabl tests

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]
  workflow_dispatch:
  schedule:
    - cron: '30 0 * * *'   # 06:00 IST
    - cron: '30 12 * * *'  # 18:00 IST
    
jobs:
  mabl-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install mabl CLI
        uses: mablhq/setup-mabl-cli@v1

      - name: Ensure jq is available
        run: jq --version || (sudo apt-get update -y && sudo apt-get install -y jq)

      # 1) Trigger deployment and wait for completion. Capture the deployment event id.
      - name: Trigger Mabl deployment (await)
        id: trigger
        run: |
          set -euo pipefail
          echo "Triggering Mabl deployment..."
          if ! mabl deployments create \
            --api-key "${{ secrets.API_KEY }}" \
            --application-id "P0JGPLSxCfMzvy27dSGseg-a" \
            --environment-id "AgZiMGbNT4tach5zIIbQbA-e" \
            --await-completion \
            --output json > event.json 2>error.log; then
              echo "❌ Mabl deployment failed:"
              cat error.log || true
              cat event.json || true
              exit 1
          fi
      
          echo "Event JSON:"
          cat event.json

          event_id=$(jq -r '.id // empty' event.json)
          if [ -z "$event_id" ] || [ "$event_id" = "null" ]; then
            echo "❌ No event id in response. Exiting."
            cat event.json
            exit 1
          fi
          echo "event_id=$event_id" >> "$GITHUB_OUTPUT"

      # 2) Poll the CORRECT endpoint until results are ready, then compute metrics.
      - name: Fetch Mabl results (poll correct endpoint)
        id: results
        if: always()   # ✅ This ensures it runs even if deployment failed
        env:
          API_KEY: ${{ secrets.API_KEY }}
          EVENT_ID: ${{ steps.trigger.outputs.event_id || '' }}  # fallback if trigger failed
        run: |
          set -euo pipefail
          echo "Fetching results for deployment event: ${EVENT_ID}"

          if [ -z "$EVENT_ID" ]; then
            echo "No event ID available. Skipping fetch."
            echo "status=NO DEPLOYMENT ❌" >> "$GITHUB_OUTPUT"
            echo "total_tests=0" >> "$GITHUB_OUTPUT"
            echo "passed_tests=0" >> "$GITHUB_OUTPUT"
            echo "failed_tests=0" >> "$GITHUB_OUTPUT"
            echo "duration=0" >> "$GITHUB_OUTPUT"
            echo "plan_names=N/A" >> "$GITHUB_OUTPUT"
            echo "test_case_names=N/A" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          
          BASE_URL="https://api.mabl.com/execution/result/event/${EVENT_ID}"

      # 3) Post the (bold) TextBlocks Adaptive Card to Teams/Power Automate
      - name: Send Teams Adaptive Card
        env:
          STATUS: ${{ steps.results.outputs.status }}
          TOTAL: ${{ steps.results.outputs.total_tests }}
          PASSED: ${{ steps.results.outputs.passed_tests }}
          FAILED: ${{ steps.results.outputs.failed_tests }}
          DURATION: ${{ steps.results.outputs.duration }}
          PLANS: ${{ steps.results.outputs.plan_names }}
          TESTS: ${{ steps.results.outputs.test_case_names }}
        run: |
          set -euo pipefail
          curl -X POST -H "Content-Type: application/json" \
            -d "{
              \"attachments\": [
                {
                  \"contentType\": \"application/vnd.microsoft.card.adaptive\",
                  \"content\": {
                    \"\$schema\": \"http://adaptivecards.io/schemas/adaptive-card.json\",
                    \"type\": \"AdaptiveCard\",
                    \"version\": \"1.4\",
                    \"body\": [
                      { \"type\": \"TextBlock\", \"size\": \"Large\", \"weight\": \"Bolder\", \"text\": \"Mabl Test Results\" },
                      { \"type\": \"TextBlock\", \"weight\": \"Bolder\", \"text\": \"Plan(s): ${PLANS}\" },
                      { \"type\": \"TextBlock\", \"weight\": \"Bolder\", \"text\": \"Status: ${STATUS}\" },
                      { \"type\": \"TextBlock\", \"weight\": \"Bolder\", \"text\": \"Total Tests: ${TOTAL}\" },
                      { \"type\": \"TextBlock\", \"weight\": \"Bolder\", \"text\": \"Passed: ${PASSED}\" },
                      { \"type\": \"TextBlock\", \"weight\": \"Bolder\", \"text\": \"Failed: ${FAILED}\" },
                      { \"type\": \"TextBlock\", \"weight\": \"Bolder\", \"text\": \"Duration (s): ${DURATION}\" },
                      { \"type\": \"TextBlock\", \"weight\": \"Bolder\", \"text\": \"Tests: ${TESTS}\" }
                    ]
                  }
                }
              ]
            }" \
            "${{ secrets.POWER_AUTOMATE_URL }}"
