name: Run all Mabl tests

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  mabl-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Mabl CLI
        uses: mablhq/setup-mabl-cli@v1

      - name: Trigger Mabl deployment
        id: trigger
        run: |
          echo "Triggering Mabl deployment..."
          DEPLOYMENT=$(mabl deployments create \
            --api-key "${{ secrets.API_KEY }}" \
            --application-id "Oonui6hTcPcWFf7v4y4exA-a" \
            --environment-id "JOHGzivFdBgSLdoq2kCagA-e" \
            --await-completion \
            --output json)

          echo "$DEPLOYMENT" > deployment.json
          deployment_id=$(jq -r '.id // empty' deployment.json)

          if [ -z "$deployment_id" ]; then
            echo "Deployment ID not found."
            exit 1
          fi

          echo "deployment_id=$deployment_id" >> $GITHUB_OUTPUT

      - name: Fetch test run results
        id: results
        run: |
          echo "Fetching results for deployment: ${{ steps.trigger.outputs.deployment_id }}"
          RESPONSE=$(curl -s -H "Authorization: Bearer ${{ secrets.BEARER_TOKEN }}" \
            "https://api.mabl.com/v1/deployments/${{ steps.trigger.outputs.deployment_id }}/executions")

          echo "$RESPONSE" > results.json

          total_tests=$(jq '[.[].plan_execution.stages[].tests[]?] | length' results.json)
          duration=$(jq '[.[].plan_execution.stages[].tests[]?.duration_seconds] | add // 0' results.json)
          test_case_names=$(jq -r '[.[].plan_execution.stages[].tests[]?.name] | join(", ")' results.json)
          failed_count=$(jq '[.[].plan_execution.stages[].tests[]?.status] | map(select(.!="succeeded")) | length' results.json)

          if [ "$failed_count" -eq 0 ] && [ "$total_tests" -gt 0 ]; then
            status="PASS ✅"
          elif [ "$total_tests" -eq 0 ]; then
            status="NO TESTS ❌"
          else
            status="FAIL ❌"
          fi

          echo "total_tests=$total_tests" >> $GITHUB_OUTPUT
          echo "duration=$duration" >> $GITHUB_OUTPUT
          echo "test_case_names=$test_case_names" >> $GITHUB_OUTPUT
          echo "status=$status" >> $GITHUB_OUTPUT

      - name: Notify Teams with Adaptive Card
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{
            "attachments": [
              {
                "contentType": "application/vnd.microsoft.card.adaptive",
                "content": {
                  "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                  "type": "AdaptiveCard",
                  "version": "1.4",
                  "body": [
                    { "type": "TextBlock", "size": "Large", "weight": "Bolder", "text": "Mabl Test Results" },
                    { "type": "TextBlock", "weight": "Bolder", "text": "Plan: Sanity Tests" },
                    { "type": "TextBlock", "weight": "Bolder", "text": "Status: ${{ steps.results.outputs.status }}" },
                    { "type": "TextBlock", "weight": "Bolder", "text": "Total Tests: ${{ steps.results.outputs.total_tests }}" },
                    { "type": "TextBlock", "weight": "Bolder", "text": "Duration (s): ${{ steps.results.outputs.duration }}" },
                    { "type": "TextBlock", "weight": "Bolder", "text": "Test Case Names: ${{ steps.results.outputs.test_case_names }}" }
                  ]
                }
              }
            ]
          }' "${{ secrets.POWER_AUTOMATE_URL }}"
