name: Run all Mabl tests

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]
  workflow_dispatch:

jobs:
  mabl-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install mabl CLI
        uses: mablhq/setup-mabl-cli@v1

      - name: Ensure jq is available
        run: jq --version || (sudo apt-get update -y && sudo apt-get install -y jq)

      - name: Trigger Mabl deployment (await)
        id: trigger
        run: |
          set -euo pipefail
          echo "Triggering Mabl deployment..."
          mabl deployments create \
            --api-key "${{ secrets.API_KEY }}" \
            --application-id "P0JGPLSxCfMzvy27dSGseg-a" \
            --environment-id "AgZiMGbNT4tach5zIIbQbA-e" \
            --await-completion \
            --output json > event.json

          cat event.json
          event_id=$(jq -r '.id // empty' event.json)
          if [ -z "$event_id" ] || [ "$event_id" = "null" ]; then
            echo "No event id in response. Exiting."
            exit 1
          fi
          echo "event_id=$event_id" >> "$GITHUB_OUTPUT"

      - name: Fetch Mabl results
        id: results
        env:
          API_KEY: ${{ secrets.API_KEY }}
          EVENT_ID: ${{ steps.trigger.outputs.event_id }}
        run: |
          set -euo pipefail
          BASE_URL="https://api.mabl.com/execution/result/event/${EVENT_ID}"

          for attempt in $(seq 1 30); do
            http_code=$(curl -sS -u "key:${API_KEY}" -o results.json -w "%{http_code}" "$BASE_URL" || true)
            echo "HTTP $http_code (attempt $attempt)"
            if [[ "$http_code" =~ ^(404|202|204)$ ]]; then
              sleep 10
              continue
            fi
            if [ "$http_code" != "200" ]; then
              cat results.json || true
              sleep 10
              continue
            fi
            has_metrics=$(jq -r 'has("journey_execution_metrics")' results.json)
            if [ "$has_metrics" != "true" ]; then
              sleep 10
              continue
            fi
            break
          done

          total_tests=$(jq -r '.journey_execution_metrics.total // 0' results.json)
          failed_tests=$(jq -r '.journey_execution_metrics.failed // 0' results.json)
          passed_tests=$(jq -r '.journey_execution_metrics.passed // 0' results.json)
          duration=$(jq '[.executions[]? | select(.start_time and .stop_time) | (.stop_time - .start_time)] | add // 0 | floor / 1000' results.json)
          plan_names=$(jq -r '[.executions[]?.plan?.nam]()_
