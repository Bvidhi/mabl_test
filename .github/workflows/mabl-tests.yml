name: Run all Mabl tests

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]
  workflow_dispatch:

jobs:
  mabl-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install mabl CLI
        uses: mablhq/setup-mabl-cli@v1

      - name: Ensure jq is available
        run: jq --version || (sudo apt-get update -y && sudo apt-get install -y jq)

      - name: Trigger Mabl deployment (await)
        id: trigger
        run: |
          set -euo pipefail
          echo "Triggering Mabl deployment..."
          mabl deployments create \
            --api-key "${{ secrets.API_KEY }}" \
            --application-id "P0JGPLSxCfMzvy27dSGseg-a" \
            --environment-id "AgZiMGbNT4tach5zIIbQbA-e" \
            --await-completion \
            --output json > event.json

          event_id=$(jq -r '.id // empty' event.json)
          if [ -z "$event_id" ] || [ "$event_id" = "null" ]; then
            echo "No event id in response. Exiting."
            exit 1
          fi
          echo "event_id=$event_id" >> "$GITHUB_OUTPUT"

      - name: Fetch Mabl results
        id: results
        env:
          API_KEY: ${{ secrets.API_KEY }}
          EVENT_ID: ${{ steps.trigger.outputs.event_id }}
        run: |
          set -euo pipefail
          BASE_URL="https://api.mabl.com/execution/result/event/${EVENT_ID}"

          for attempt in $(seq 1 30); do
            http_code=$(curl -sS -u "key:${API_KEY}" -o results.json -w "%{http_code}" "$BASE_URL" || true)
            if [ "$http_code" != "200" ]; then
              sleep 10
              continue
            fi
            break
          done

          test_case_names=$(jq -r '[.executions[].journey_executions[].journey_name // "Unnamed Test"] | join("\n")' results.json)
          test_case_names_safe="${test_case_names//$'\n'/'%0A'}"
          echo "test_case_names=$test_case_names_safe" >> "$GITHUB_OUTPUT"

      - name: Send Teams Adaptive Card
        env:
          TESTS_ENCODED: ${{ steps.results.outputs.test_case_names }}
        run: |
          TESTS="${TESTS_ENCODED//%0A/$'\n'}"
          curl -X POST -H "Content-Type: application/json" \
            -d "{
              \"attachments\": [
                {
                  \"contentType\": \"application/vnd.microsoft.card.adaptive\",
                  \"content\": {
                    \"\$schema\": \"http://adaptivecards.io/schemas/adaptive-card.json\",
                    \"type\": \"AdaptiveCard\",
                    \"version\": \"1.4\",
                    \"body\": [
                      { \"type\": \"TextBlock\", \"size\": \"Large\", \"weight\": \"Bolder\", \"text\": \"Mabl Test Results\" },
                      { \"type\": \"TextBlock\", \"weight\": \"Bolder\", \"text\": \"Tests: \n${TESTS}\" }
                    ]
                  }
                }
              ]
            }" \
            "${{ secrets.POWER_AUTOMATE_URL }}"
