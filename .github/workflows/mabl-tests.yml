name: Run all Mabl tests

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]
  workflow_dispatch:

jobs:
  mabl-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Mabl CLI
        uses: mablhq/setup-mabl-cli@v1

      - name: Trigger Mabl deployment
        run: |
          mabl deployments create \
            --api-key "${{ secrets.API_KEY }}" \
            --application-id "Oonui6hTcPcWFf7v4y4exA-a" \
            --environment-id "JOHGzivFdBgSLdoq2kCagA-e" \
            --await-completion \
            --output json > deployment.json

          deployment_id=$(jq -r '.id' deployment.json)
          echo "deployment_id=$deployment_id" >> $GITHUB_OUTPUT

      - name: Fetch actual test results from Mabl API
        run: |
          echo "Fetching actual test results from Mabl API..."
          curl -s -H "Authorization: Bearer ${{ secrets.BEARER_TOKEN }}" \
               "https://api.mabl.com/results/deployment/${{ steps.run_mabl.outputs.deployment_id }}/testRuns" \
               -o test_runs.json

          # Check if JSON is empty
          if [ ! -s test_runs.json ] || ! jq empty test_runs.json; then
            echo "No test runs found or invalid JSON."
            echo "total_tests=0" >> $GITHUB_OUTPUT
            echo "test_case_names=none" >> $GITHUB_OUTPUT
            echo "status=NO TEST RUNS ❌" >> $GITHUB_OUTPUT
            echo "duration=0" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Extract total test runs
          total_tests=$(jq '.test_runs | length' test_runs.json)
          # Extract test case names
          test_case_names=$(jq -r '[.test_runs[].name] | join(", ")' test_runs.json)
          # Determine overall status
          failed_count=$(jq '[.test_runs[].status] | map(select(.!="PASSED")) | length' test_runs.json)
          status="PASS ✅"
          if [ "$failed_count" -gt 0 ]; then status="FAIL ❌"; fi
          # Total duration in seconds
          duration=$(jq '[.test_runs[].duration_seconds] | add // 0' test_runs.json)

          echo "total_tests=$total_tests" >> $GITHUB_OUTPUT
          echo "test_case_names=$test_case_names" >> $GITHUB_OUTPUT
          echo "status=$status" >> $GITHUB_OUTPUT
          echo "duration=$duration" >> $GITHUB_OUTPUT

      - name: Notify Teams with actual Mabl results
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{
            "attachments": [
              {
                "contentType": "application/vnd.microsoft.card.adaptive",
                "content": {
                  "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                  "type": "AdaptiveCard",
                  "version": "1.4",
                  "body": [
                    {
                      "type": "TextBlock",
                      "size": "Large",
                      "weight": "Bolder",
                      "text": "Mabl Test Results"
                    },
                    {
                      "type": "TextBlock",
                      "text": "Plan: Sanity Tests"
                    },
                    {
                      "type": "TextBlock",
                      "text": "Status: ${{ steps.test_runs.outputs.status }}"
                    },
                    {
                      "type": "FactSet",
                      "facts": [
                        { "title": "Total Test Runs", "value": "${{ steps.test_runs.outputs.total_tests }}" },
                        { "title": "Total Duration (s)", "value": "${{ steps.test_runs.outputs.duration }}" },
                        { "title": "Test Case Names", "value": "${{ steps.test_runs.outputs.test_case_names }}" }
                      ]
                    }
                  ]
                }
              }
            ]
          }' \
          "${{ secrets.POWER_AUTOMATE_URL }}"
